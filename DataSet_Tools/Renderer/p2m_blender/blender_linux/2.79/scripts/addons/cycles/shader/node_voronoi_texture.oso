OpenShadingLanguage 1.00
# Compiled by oslc 1.7.5
# options: -q -O2 -I/home/sources/blender-release/intern/cycles/kernel/shaders -o /home/sources/blender-build/blender-2.79b-linux-glibc219-x86_64/intern/cycles/kernel/shaders/node_voronoi_texture.oso
shader node_voronoi_texture
param	int	use_mapping	0		%read{2,2} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{3,3} %write{2147483647,-1}
param	string	coloring	"intensity"		%read{106,106} %write{2147483647,-1}
param	float	Scale	5		%read{4,4} %write{2147483647,-1}
param	point	Vector	0 0 0		%read{1,1} %write{0,0} %initexpr
oparam	float	Fac	0		%read{110,110} %write{109,131}
oparam	color	Color	0 0 0		%read{125,128} %write{110,124}
global	point	P	%read{0,0} %write{2147483647,-1}
local	float	___646_r	%read{21,124} %write{21,113}
local	float	___646_g	%read{21,124} %write{21,118}
local	float	___646_b	%read{21,124} %write{21,123}
local	int	___647_xx	%read{21,105} %write{20,105}
local	int	___647_yy	%read{21,105} %write{21,105}
local	int	___647_zz	%read{21,105} %write{21,105}
local	int	___647_xi	%read{20,105} %write{8,8}
local	int	___647_yi	%read{21,105} %write{11,11}
local	int	___647_zi	%read{21,105} %write{14,14}
local	point	___653_ip	%read{21,105} %write{21,105}
local	point	___653_vp	%read{21,105} %write{21,105}
local	point	___653_pd	%read{21,105} %write{21,105}
local	float	___653_d	%read{21,105} %write{21,105}
local	point	p	%read{3,4} %write{1,3}
local	float[4]	da	%read{21,108} %write{15,105}
local	point[4]	pa	%read{21,111} %write{21,105}
temp	point	$tmp1	%read{6,105} %write{4,4}
const	float	$const1	1		%read{130,130} %write{2147483647,-1}
const	string	$const2	"voronoi"		%read{5,5} %write{2147483647,-1}
temp	float	$tmp2	%read{8,8} %write{7,7}
const	int	$const3	0		%read{6,125} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{6,6}
temp	float	$tmp4	%read{11,11} %write{10,10}
const	int	$const4	1		%read{9,126} %write{2147483647,-1}
temp	float	$tmp5	%read{10,10} %write{9,9}
temp	float	$tmp6	%read{14,14} %write{13,13}
const	int	$const5	2		%read{12,128} %write{2147483647,-1}
temp	float	$tmp7	%read{13,13} %write{12,12}
const	float	$const6	1e+10		%read{15,18} %write{2147483647,-1}
const	int	$const7	3		%read{18,99} %write{2147483647,-1}
temp	int	$tmp8	%read{21,105} %write{21,105}
temp	int	$tmp9	%read{19,105} %write{20,105}
temp	int	$tmp10	%read{21,105} %write{21,105}
temp	int	$tmp11	%read{21,105} %write{21,105}
temp	int	$tmp12	%read{21,105} %write{21,105}
temp	int	$tmp13	%read{21,105} %write{21,105}
temp	float	$tmp14	%read{21,105} %write{21,105}
temp	float	$tmp15	%read{21,105} %write{21,105}
temp	float	$tmp16	%read{21,105} %write{21,105}
const	string	$const8	"cellnoise_color"		%read{35,112} %write{2147483647,-1}
temp	point	$tmp17	%read{21,105} %write{21,105}
temp	float	$tmp18	%read{21,105} %write{21,105}
temp	float	$tmp19	%read{21,105} %write{21,105}
temp	float	$tmp20	%read{21,105} %write{21,105}
temp	point	$tmp21	%read{21,105} %write{21,105}
temp	float	$tmp22	%read{21,105} %write{21,105}
temp	float	$tmp23	%read{21,105} %write{21,105}
temp	float	$tmp24	%read{21,105} %write{21,105}
temp	point	$tmp25	%read{21,105} %write{21,105}
temp	point	$tmp26	%read{21,105} %write{21,105}
temp	float	$tmp27	%read{21,105} %write{21,105}
temp	float	$tmp28	%read{21,105} %write{21,105}
temp	float	$tmp29	%read{21,105} %write{21,105}
temp	float	$tmp30	%read{21,105} %write{21,105}
temp	int	$tmp31	%read{21,105} %write{21,105}
temp	float	$tmp32	%read{21,105} %write{21,105}
temp	float	$tmp33	%read{21,105} %write{21,105}
temp	float	$tmp34	%read{21,105} %write{21,105}
temp	point	$tmp35	%read{21,105} %write{21,105}
temp	point	$tmp36	%read{21,105} %write{21,105}
temp	point	$tmp37	%read{21,105} %write{21,105}
temp	float	$tmp38	%read{21,105} %write{21,105}
temp	int	$tmp39	%read{21,105} %write{21,105}
temp	float	$tmp40	%read{21,105} %write{21,105}
temp	float	$tmp41	%read{21,105} %write{21,105}
temp	point	$tmp42	%read{21,105} %write{21,105}
temp	point	$tmp43	%read{21,105} %write{21,105}
temp	float	$tmp44	%read{21,105} %write{21,105}
temp	int	$tmp45	%read{21,105} %write{21,105}
temp	float	$tmp46	%read{21,105} %write{21,105}
temp	point	$tmp47	%read{21,105} %write{21,105}
temp	float	$tmp48	%read{21,105} %write{21,105}
temp	int	$tmp49	%read{21,105} %write{21,105}
temp	int	$tmp50	%read{2147483647,-1} %write{21,105}
temp	int	$tmp51	%read{2147483647,-1} %write{21,105}
temp	int	$tmp52	%read{2147483647,-1} %write{21,105}
const	string	$const9	"intensity"		%read{106,106} %write{2147483647,-1}
temp	int	$tmp53	%read{107,107} %write{106,106}
temp	float	$tmp54	%read{109,109} %write{108,108}
temp	point	$tmp55	%read{113,121} %write{111,111}
temp	point	$tmp56	%read{118,118} %write{117,117}
temp	float	$tmp57	%read{117,117} %write{114,114}
temp	float	$tmp58	%read{117,117} %write{115,115}
temp	float	$tmp59	%read{117,117} %write{116,116}
temp	point	$tmp60	%read{123,123} %write{122,122}
temp	float	$tmp61	%read{122,122} %write{119,119}
temp	float	$tmp62	%read{122,122} %write{120,120}
temp	float	$tmp63	%read{122,122} %write{121,121}
temp	float	$tmp64	%read{127,127} %write{125,125}
temp	float	$tmp65	%read{127,127} %write{126,126}
temp	float	$tmp66	%read{129,129} %write{127,127}
temp	float	$tmp67	%read{129,129} %write{128,128}
temp	float	$tmp68	%read{131,131} %write{129,129}
const	float	$const10	3		%read{130,130} %write{2147483647,-1}
temp	float	$tmp69	%read{131,131} %write{130,130}
code Vector
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:27
# 	point Vector = P,
	assign		Vector P 	%filename{"/home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{27} %argrw{"wr"}
code ___main___
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:31
# 	point p = Vector;
	assign		p Vector 	%filename{"/home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{31} %argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:33
# 	if (use_mapping)
	if		use_mapping 4 4 	%line{33} %argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:34
# 		p = transform(mapping, p);
	transform	p mapping p 	%line{34} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:40
# 	voronoi(p * Scale, 1.0, da, pa);
	mul		$tmp1 p Scale 	%line{40} %argrw{"wrr"}
	functioncall	$const2 106 	%argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:33
# 	xi = (int)floor(p[0]);
	compref		$tmp3 $tmp1 $const3 	%filename{"/home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h"} %line{33} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	assign		___647_xi $tmp2 	%argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:34
# 	yi = (int)floor(p[1]);
	compref		$tmp5 $tmp1 $const4 	%line{34} %argrw{"wrr"}
	floor		$tmp4 $tmp5 	%argrw{"wr"}
	assign		___647_yi $tmp4 	%argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:35
# 	zi = (int)floor(p[2]);
	compref		$tmp7 $tmp1 $const5 	%line{35} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	assign		___647_zi $tmp6 	%argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:37
# 	da[0] = 1e10;
	aassign		da $const3 $const6 	%line{37} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:38
# 	da[1] = 1e10;
	aassign		da $const4 $const6 	%line{38} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:39
# 	da[2] = 1e10;
	aassign		da $const5 $const6 	%line{39} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:40
# 	da[3] = 1e10;
	aassign		da $const7 $const6 	%line{40} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:42
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp9 21 23 104 106 	%line{42} %argrw{"r"}
	sub		___647_xx ___647_xi $const4 	%argrw{"wrr"}
	add		$tmp8 ___647_xi $const4 	%argrw{"wrr"}
	le		$tmp9 ___647_xx $tmp8 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:43
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp11 25 27 102 104 	%line{43} %argrw{"r"}
	sub		___647_yy ___647_yi $const4 	%argrw{"wrr"}
	add		$tmp10 ___647_yi $const4 	%argrw{"wrr"}
	le		$tmp11 ___647_yy $tmp10 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:44
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp13 29 31 100 102 	%line{44} %argrw{"r"}
	sub		___647_zz ___647_zi $const4 	%argrw{"wrr"}
	add		$tmp12 ___647_zi $const4 	%argrw{"wrr"}
	le		$tmp13 ___647_zz $tmp12 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:45
# 				point ip = point(xx, yy, zz);
	assign		$tmp14 ___647_xx 	%line{45} %argrw{"wr"}
	assign		$tmp15 ___647_yy 	%argrw{"wr"}
	assign		$tmp16 ___647_zz 	%argrw{"wr"}
	point		___653_ip $tmp14 $tmp15 $tmp16 	%argrw{"wrrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:46
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const8 48 	%line{46} %argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:21
# 	float r = cellnoise(p);
	cellnoise	___646_r ___653_ip 	%line{21} %argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:22
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp18 ___653_ip $const4 	%line{22} %argrw{"wrr"}
	compref		$tmp19 ___653_ip $const3 	%argrw{"wrr"}
	compref		$tmp20 ___653_ip $const5 	%argrw{"wrr"}
	point		$tmp17 $tmp18 $tmp19 $tmp20 	%argrw{"wrrr"}
	cellnoise	___646_g $tmp17 	%argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:23
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp22 ___653_ip $const4 	%line{23} %argrw{"wrr"}
	compref		$tmp23 ___653_ip $const5 	%argrw{"wrr"}
	compref		$tmp24 ___653_ip $const3 	%argrw{"wrr"}
	point		$tmp21 $tmp22 $tmp23 $tmp24 	%argrw{"wrrr"}
	cellnoise	___646_b $tmp21 	%argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:25
# 	return color(r, g, b);
	color		___653_vp ___646_r ___646_g ___646_b 	%line{25} %argrw{"wrrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:47
# 				point pd = p - (vp + ip);
	add		$tmp25 ___653_vp ___653_ip 	%line{47} %argrw{"wrr"}
	sub		___653_pd $tmp1 $tmp25 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:48
# 				float d = dot(pd, pd);
	dot		___653_d ___653_pd ___653_pd 	%line{48} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:50
# 				vp += point(xx, yy, zz);
	assign		$tmp27 ___647_xx 	%line{50} %argrw{"wr"}
	assign		$tmp28 ___647_yy 	%argrw{"wr"}
	assign		$tmp29 ___647_zz 	%argrw{"wr"}
	point		$tmp26 $tmp27 $tmp28 $tmp29 	%argrw{"wrrr"}
	add		___653_vp ___653_vp $tmp26 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:52
# 				if (d < da[0]) {
	aref		$tmp30 da $const3 	%line{52} %argrw{"wrr"}
	lt		$tmp31 ___653_d $tmp30 	%argrw{"wrr"}
	if		$tmp31 73 100 	%argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:53
# 					da[3] = da[2];
	aref		$tmp32 da $const5 	%line{53} %argrw{"wrr"}
	aassign		da $const7 $tmp32 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:54
# 					da[2] = da[1];
	aref		$tmp33 da $const4 	%line{54} %argrw{"wrr"}
	aassign		da $const5 $tmp33 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:55
# 					da[1] = da[0];
	aref		$tmp34 da $const3 	%line{55} %argrw{"wrr"}
	aassign		da $const4 $tmp34 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:56
# 					da[0] = d;
	aassign		da $const3 ___653_d 	%line{56} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:58
# 					pa[3] = pa[2];
	aref		$tmp35 pa $const5 	%line{58} %argrw{"wrr"}
	aassign		pa $const7 $tmp35 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:59
# 					pa[2] = pa[1];
	aref		$tmp36 pa $const4 	%line{59} %argrw{"wrr"}
	aassign		pa $const5 $tmp36 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:60
# 					pa[1] = pa[0];
	aref		$tmp37 pa $const3 	%line{60} %argrw{"wrr"}
	aassign		pa $const4 $tmp37 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:61
# 					pa[0] = vp;
	aassign		pa $const3 ___653_vp 	%line{61} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:63
# 				else if (d < da[1]) {
	aref		$tmp38 da $const4 	%line{63} %argrw{"wrr"}
	lt		$tmp39 ___653_d $tmp38 	%argrw{"wrr"}
	if		$tmp39 86 100 	%argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:64
# 					da[3] = da[2];
	aref		$tmp40 da $const5 	%line{64} %argrw{"wrr"}
	aassign		da $const7 $tmp40 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:65
# 					da[2] = da[1];
	aref		$tmp41 da $const4 	%line{65} %argrw{"wrr"}
	aassign		da $const5 $tmp41 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:66
# 					da[1] = d;
	aassign		da $const4 ___653_d 	%line{66} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:68
# 					pa[3] = pa[2];
	aref		$tmp42 pa $const5 	%line{68} %argrw{"wrr"}
	aassign		pa $const7 $tmp42 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:69
# 					pa[2] = pa[1];
	aref		$tmp43 pa $const4 	%line{69} %argrw{"wrr"}
	aassign		pa $const5 $tmp43 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:70
# 					pa[1] = vp;
	aassign		pa $const4 ___653_vp 	%line{70} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:72
# 				else if (d < da[2]) {
	aref		$tmp44 da $const5 	%line{72} %argrw{"wrr"}
	lt		$tmp45 ___653_d $tmp44 	%argrw{"wrr"}
	if		$tmp45 95 100 	%argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:73
# 					da[3] = da[2];
	aref		$tmp46 da $const5 	%line{73} %argrw{"wrr"}
	aassign		da $const7 $tmp46 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:74
# 					da[2] = d;
	aassign		da $const5 ___653_d 	%line{74} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:76
# 					pa[3] = pa[2];
	aref		$tmp47 pa $const5 	%line{76} %argrw{"wrr"}
	aassign		pa $const7 $tmp47 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:77
# 					pa[2] = vp;
	aassign		pa $const5 ___653_vp 	%line{77} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:79
# 				else if (d < da[3]) {
	aref		$tmp48 da $const7 	%line{79} %argrw{"wrr"}
	lt		$tmp49 ___653_d $tmp48 	%argrw{"wrr"}
	if		$tmp49 100 100 	%argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:80
# 					da[3] = d;
	aassign		da $const7 ___653_d 	%line{80} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:81
# 					pa[3] = vp;
	aassign		pa $const7 ___653_vp 	%line{81} %argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:44
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp50 ___647_zz 	%line{44} %argrw{"wr"}
	add		___647_zz ___647_zz $const4 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:43
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp51 ___647_yy 	%line{43} %argrw{"wr"}
	add		___647_yy ___647_yy $const4 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:42
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp52 ___647_xx 	%line{42} %argrw{"wr"}
	add		___647_xx ___647_xx $const4 	%argrw{"wrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:43
# /*
	eq		$tmp53 coloring $const9 	%filename{"/home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{43} %argrw{"wrr"}
	if		$tmp53 111 132 	%argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:44
#  * Copyright 2011-2013 Blender Foundation
	aref		$tmp54 da $const3 	%line{44} %argrw{"wrr"}
	fabs		Fac $tmp54 	%argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:45
#  *
	assign		Color Fac 	%line{45} %argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:48
#  * You may obtain a copy of the License at
	aref		$tmp55 pa $const3 	%line{48} %argrw{"wrr"}
	functioncall	$const8 125 	%argrw{"r"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:21
# 	float r = cellnoise(p);
	cellnoise	___646_r $tmp55 	%filename{"/home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h"} %line{21} %argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:22
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp57 $tmp55 $const4 	%line{22} %argrw{"wrr"}
	compref		$tmp58 $tmp55 $const3 	%argrw{"wrr"}
	compref		$tmp59 $tmp55 $const5 	%argrw{"wrr"}
	point		$tmp56 $tmp57 $tmp58 $tmp59 	%argrw{"wrrr"}
	cellnoise	___646_g $tmp56 	%argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:23
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp61 $tmp55 $const4 	%line{23} %argrw{"wrr"}
	compref		$tmp62 $tmp55 $const5 	%argrw{"wrr"}
	compref		$tmp63 $tmp55 $const3 	%argrw{"wrr"}
	point		$tmp60 $tmp61 $tmp62 $tmp63 	%argrw{"wrrr"}
	cellnoise	___646_b $tmp60 	%argrw{"wr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_texture.h:25
# 	return color(r, g, b);
	color		Color ___646_r ___646_g ___646_b 	%line{25} %argrw{"wrrr"}
# /home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl:49
# 	matrix mapping = matrix(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
	compref		$tmp64 Color $const3 	%filename{"/home/sources/blender-release/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{49} %argrw{"wrr"}
	compref		$tmp65 Color $const4 	%argrw{"wrr"}
	add		$tmp66 $tmp64 $tmp65 	%argrw{"wrr"}
	compref		$tmp67 Color $const5 	%argrw{"wrr"}
	add		$tmp68 $tmp66 $tmp67 	%argrw{"wrr"}
	div		$tmp69 $const1 $const10 	%argrw{"wrr"}
	mul		Fac $tmp68 $tmp69 	%argrw{"wrr"}
	end
